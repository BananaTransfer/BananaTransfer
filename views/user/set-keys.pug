extends ../layout

block content
  .row.justify-content-center.mb-3
    .col-1
      a.btn.btn-outline-secondary(href="/user" style="border-radius:12px;")
        i.bi.bi-arrow-left.align-middle
    .col-10.col-md-8.col-lg-6.text-center
      h2.mt-1 Key-Pair and Master-Password
    .col-1

  if error
    .row.justify-content-center.mb-3
      .col-12.col-md-10.col-lg-8
        .alert.alert-danger.text-center= error

  .row.justify-content-center
    input(type="hidden" id="_csrf" value=csrfToken)
    .col-12.col-md-10.col-lg-8.mb-3
      h4.font-weight-bold 1. Generate new Private and Public Key
      hr.mb-3(style="border-top:3px solid #000; width:100%; margin:auto")
      button.btn.btn-secondary(type="button" id="generateKeyPairBtn")
        i.bi.bi-key.me-1
        | Generate Key-Pair
      div.text-muted.mt-2
        | The Private and Public Key will be used to encrypt the files shared with you.        
      label.mt-3.form-label(for="publicKeyField") Public Key Hash
      .input-group.mb-2.mx-auto(style="max-width:100%")
        input.form-control.form-control-sm(type="text", id="publicKeyHashField", value=publicKeyHash, readonly, disabled)
        button.btn.btn-outline-secondary(type="button", id="copyPublicKeyHashBtn")
          i.bi.bi-clipboard
      div.text-muted.mb-2
        | This is your public key hash fingerprint. Your public key will be automatically shared with others so they can send you files.

    .col-12.col-md-10.col-lg-8.mb-3
      h4.font-weight-bold 2. Generate new Master-Password
      hr.mb-3(style="border-top:3px solid #000; width:100%; margin:auto")
      button.btn.btn-secondary(type="button" id="generateMasterPasswordBtn")
        i.bi.bi-shield-lock.me-1
        | Generate Master-Password
      div.text-muted.mt-2
        | The Master-Password is used to encrypt your private Key before storing it securely on your organization's server.
        | Before downloading and decrypting files that were shared with you, you will be asked for this Master-Password.
      label.mt-3.form-label(for="masterPasswordField") Master Password
      .input-group.mb-2.mx-auto(style="max-width:100%")
        input.form-control.form-control-sm(type="text", id="masterPasswordField", readonly, disabled)
        button.btn.btn-outline-secondary(type="button", id="copyMasterPasswordBtn")
          i.bi.bi-clipboard
      div.text-danger.mt-1
        | Please make sure you store the Master-Password in your Password-Manager or another secure location.

    .col-12.col-md-10.col-lg-8.mb-3
      h4.font-weight-bold 3. Encrypt and Save new Keys
      hr.mb-3(style="border-top:3px solid #000; width:100%; margin:auto")
      if user.public_key
        div.text-danger.mt-1.mb-1
          | Warning: This will override your current keys stored on the server.
          | Files that were previously shared with you, wont be accessible anymore with the new key
      div.text-danger.mt-1.mb-1(id="setKeyError")
      button.btn.btn-secondary.mt-1.mb-1(type="button", id="encryptAndSaveBtn", disabled)
        i.bi.bi-upload.me-1
        | Encrypt and save Keys
      div.text-muted.mt-1
        | Your private key will be encrypted with your master-password and stored on your organizations server.

  include ../components/modals/master-password.pug
  include ../components/modals/user-password.pug

  script(type="module").
    import { generatedKeyPair, generateKeyPair, generateMasterPassword, encryptAndSaveKey } from '/js/set-keys.js';
    import { copyToClipboard } from '/js/utils/common.js';

    const isFirstTime = !{!user.public_key};

    document.getElementById('generateKeyPairBtn').addEventListener('click', generateKeyPair);
    document.getElementById('generateMasterPasswordBtn').addEventListener('click', generateMasterPassword);
    document.getElementById('encryptAndSaveBtn').addEventListener('click', () => encryptAndSaveKey(isFirstTime));
    document.getElementById('copyPublicKeyHashBtn').addEventListener('click', () => copyToClipboard(document.getElementById('publicKeyHashField'), document.getElementById('copyPublicKeyHashBtn')));
    document.getElementById('copyMasterPasswordBtn').addEventListener('click', () => copyToClipboard(document.getElementById('masterPasswordField'), document.getElementById('copyMasterPasswordBtn')));


