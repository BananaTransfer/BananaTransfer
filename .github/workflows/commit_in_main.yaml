name: Docker Build and Publish
on:
  push:
    branches: ["main"]
    paths-ignore:
      - "documents/**"
      - ".githooks/**"
      - "LICENSE"
      - "README.md"
      - "docker-compose.yaml"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false # otherwise may corrupt terraform state
jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    environment: e2e
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Validate the code quality
        uses: ./.github/actions/code_quality_check
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy integration test docker image
        uses: ./.github/actions/build_push_docker
        with:
          TAG: e2e
      - name: Deploy integration test environment A
        uses: ./.github/actions/deploy
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENVIRONMENT_NAME: e2e-a
          SSH_PUB_KEY: ${{ vars.SSH_PUB_KEY }}
          SSH_PRIV_KEY: ${{ secrets.SSH_PRIV_KEY }}
          INTERNAL_HOSTNAME: A.${{ vars.BASE_HOSTNAME }}
          EXTERNAL_HOSTNAME: A.${{ vars.BASE_HOSTNAME }}
          DOCKER_REPO_USER: ${{ secrets.DOCKER_REPO_USER }}
          DOCKER_REPO_TOKEN: ${{ secrets.DOCKER_REPO_TOKEN }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DOMAIN: A.${{ vars.BASE_HOSTNAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DOCKER_IMAGE_TAG: e2e
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: BASE_URL=https://A.${{ vars.BASE_HOSTNAME }} npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Destroy the integration test environment A
        if: ${{ !cancelled() }} # run even in case of failure, but not if cancelled
        run: | 
          terraform destroy -auto-approve -auto-approve -input=false \
            -var="ssh_pub_key=${{ vars.SSH_PUB_KEY }}" \
            -var="environment_name=e2e-a" \
            -var="hostname=A.${{ vars.BASE_HOSTNAME }}"
        working-directory: infra/terraform
        shell: bash
      - name: Deploy latest docker image
        uses: ./.github/actions/build_push_docker
        with:
          TAG: latest
  deploy_saul:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment:
      name: saul
      url: bananatransfer.saul.ch
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENVIRONMENT_NAME: ${{ vars.ENVIRONMENT_NAME }}
          SSH_PUB_KEY: ${{ vars.SSH_PUB_KEY }}
          SSH_PRIV_KEY: ${{ secrets.SSH_PRIV_KEY }}
          INTERNAL_HOSTNAME: ${{ vars.INTERNAL_HOSTNAME }}
          EXTERNAL_HOSTNAME: ${{ vars.EXTERNAL_HOSTNAME }}
          DOCKER_REPO_USER: ${{ secrets.DOCKER_REPO_USER }}
          DOCKER_REPO_TOKEN: ${{ secrets.DOCKER_REPO_TOKEN }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DOMAIN: ${{ vars.DOMAIN }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
  deploy_ansermoz:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment:
      name: ansermoz
      url: bananatransfer.ansermoz.dev
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENVIRONMENT_NAME: ${{ vars.ENVIRONMENT_NAME }}
          SSH_PUB_KEY: ${{ vars.SSH_PUB_KEY }}
          SSH_PRIV_KEY: ${{ secrets.SSH_PRIV_KEY }}
          INTERNAL_HOSTNAME: ${{ vars.INTERNAL_HOSTNAME }}
          EXTERNAL_HOSTNAME: ${{ vars.EXTERNAL_HOSTNAME }}
          DOCKER_REPO_USER: ${{ secrets.DOCKER_REPO_USER }}
          DOCKER_REPO_TOKEN: ${{ secrets.DOCKER_REPO_TOKEN }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DOMAIN: ${{ vars.DOMAIN }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}