name: Docker Build and Publish
on:
  push:
    branches: ["main"]
    paths-ignore:
      - "documents/**"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Validate the code quality
        uses: ./.github/actions/code_quality_check
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Define Docker image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=raw,value=latest
      - name: Build and push latest docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment:
      name: staging
      url: https://staging.bananatransfer.ansermoz.dev
    env:
      DOMAIN: staging.bananatransfer.ansermoz.dev
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Configure the AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Initialise terraform
        run: terraform init -backend-config="key=${{ vars.ENVIRONMENT_NAME }}"
        working-directory: infra/terraform
      - name: Create the AWS infrastructure
        run: |
          terraform apply -auto-approve \
            -var="ssh_pub_key=${{ vars.SSH_PUB_KEY }}" \
            -var="environment_name=${{ vars.ENVIRONMENT_NAME }}" \
            -var="domain=${{ env.DOMAIN }}"
        working-directory: infra/terraform
      - name: Install python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install Ansible
        run: pip install -r requirements.txt
        working-directory: infra/ansible
      - name: Add docker collection for ansible
        run: ansible-galaxy collection install community.docker
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIV_KEY }}
      - name: Deploy on EC2
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ${{ vars.ENVIRONMENT_NAME }}_inventory_aws_ec2.yml playbook.yml \
            -e "github_username=${{ secrets.DOCKER_REPO_USER }}" \
            -e "github_token=${{ secrets.DOCKER_REPO_TOKEN }}" \
            -e "domain=${{ env.DOMAIN }}" \
            -e "db_user=${{ secrets.DB_USER }}" \
            -e "db_pass=${{ secrets.DB_PASS }}" \
            -e "s3_client_id=${{ secrets.S3_CLIENT_ID }}" \
            -e "s3_client_secret=${{ secrets.S3_CLIENT_SECRET }}" \
            -e "s3_bucket=bananatransfer_${{ vars.ENVIRONMENT_NAME }}_s3_bucket" \
            -u admin
        working-directory: infra/ansible