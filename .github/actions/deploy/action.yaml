name: "AWS deploy"
runs:
  using: "composite"
  steps:
    - name: Clone the repository
      uses: actions/checkout@v4
    - name: Configure the AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-west-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
    - name: Initialise terraform
      run: terraform init -backend-config="key=${{ vars.ENVIRONMENT_NAME }}"
      working-directory: infra/terraform
    - name: Create the AWS infrastructure
      run: |
        terraform apply -auto-approve \
          -var="ssh_pub_key=${{ vars.SSH_PUB_KEY }}" \
          -var="environment_name=${{ vars.ENVIRONMENT_NAME }}" \
          -var="domain=${{ env.INTERNAL_DOMAIN }}"
      working-directory: infra/terraform
    - name: Install python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install Ansible
      run: pip install -r requirements.txt
      working-directory: infra/ansible
    - name: Add docker collection for ansible
      run: ansible-galaxy collection install community.docker
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIV_KEY }}
    - name: Deploy on EC2
      run: |
        ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ${{ vars.ENVIRONMENT_NAME }}_inventory_aws_ec2.yml playbook.yml \
          -e "github_username=${{ secrets.DOCKER_REPO_USER }}" \
          -e "github_token=${{ secrets.DOCKER_REPO_TOKEN }}" \
          -e "domain=${{ env.EXTERNAL_DOMAIN }}" \
          -u admin
      working-directory: infra/ansible
