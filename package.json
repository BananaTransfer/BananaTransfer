{
  "name": "banana-transfer",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build && tsc -p tsconfig.public.json && npm run copy:assets",
    "watch:frontend": "tsc -p tsconfig.public.json --watch",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:dev:all": "run-p start:dev watch:frontend",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest && jest --config jest.public.config.json",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "playwright test",
    "clean": "npm run clean:dist && npm run clean:node_modules && npm run clean:public",
    "clean:all": "npm run clean:dist && npm run clean:node_modules && npm run clean:public && npm run clean:package-lock",
    "clean:dist": "rm -rf dist",
    "clean:node_modules": "rm -rf node_modules",
    "clean:package-lock": "rm -f package-lock.json",
    "clean:public": "rm -rf public/js public/bootstrap public/htmx",
    "ts-node:typeorm": "ts-node --transpile-only ./node_modules/typeorm/cli.js -d ./src/database/data-source.ts",
    "migration:generate": "npm run ts-node:typeorm migration:generate -n",
    "migration:run": "npm run ts-node:typeorm migration:run",
    "migration:revert": "npm run ts-node:typeorm migration:revert",
    "copy:assets": "node copy-assets.js"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.864.0",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/serve-static": "^5.0.3",
    "@nestjs/typeorm": "^11.0.0",
    "@types/passport-local": "^1.0.38",
    "bcrypt": "^6.0.0",
    "bootstrap": "^5.3.7",
    "bootstrap-icons": "^1.13.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.7",
    "csrf": "^3.1.0",
    "htmx.org": "^2.0.6",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "pg": "^8.16.3",
    "pug": "^3.0.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "typeorm": "^0.3.25",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.33.0",
    "@faker-js/faker": "^9.9.0",
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.7",
    "@nestjs/testing": "^11.1.6",
    "@playwright/test": "^1.54.2",
    "@suites/di.nestjs": "^3.0.1",
    "@suites/doubles.jest": "^3.0.1",
    "@suites/unit": "^3.0.1",
    "@swc/cli": "^0.7.8",
    "@swc/core": "^1.13.3",
    "@testcontainers/minio": "^11.5.1",
    "@testcontainers/postgresql": "^11.5.1",
    "@types/bcrypt": "^6.0.0",
    "@types/cookie-parser": "^1.4.9",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.2.1",
    "@types/supertest": "^6.0.3",
    "eslint": "^9.33.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "globals": "^16.3.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typeorm-ts-node-esm": "^0.3.20",
    "typescript": "^5.1.6",
    "typescript-eslint": "^8.39.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/src/public/"
    ],
    "moduleNameMapper": {
      "^@auth/(.*)$": "<rootDir>/auth/$1",
      "^@database/(.*)$": "<rootDir>/database/$1",
      "^@transfer/(.*)$": "<rootDir>/transfer/$1",
      "^@user/(.*)$": "<rootDir>/user/$1",
      "^@public/(.*)$": "<rootDir>/public/$1",
      "^@views/(.*)$": "<rootDir>/../views/$1",
      "^@test/(.*)$": "<rootDir>/../test/$1"
    }
  }
}
